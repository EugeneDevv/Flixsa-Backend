--/*
--* --- General Rules ---
--* Use underscore_names instead of Camelcase
--* Table names should be plural
--* Spell out id fields (item_id instead of id)
--* Do not use ambiguous column names
--* Name foreign key columns the same as the columns they refer to
--* Use caps for all SQL queries
--*/
--
--CREATE SCHEMA IF NOT EXISTS flixsareverse;
--
--SET NAMES 'UTF8MB4';
--SET TIME_ZONE = '+3:00';
--
--DROP TABLE IF EXISTS Users;
--
--CREATE TABLE Users(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    first_name VARCHAR(50) NOT NULL,
--    last_name VARCHAR(50) NOT NULL,
--    email VARCHAR(100) NOT NULL,
--    profile_image VARCHAR(255) DEFAULT NULL,
--    password VARCHAR(255) DEFAULT NULL,
--    phone VARCHAR(20) DEFAULT NULL,
--    country VARCHAR(50) DEFAULT NULL,
--    state VARCHAR(50) DEFAULT NULL,
--    city VARCHAR(50) DEFAULT NULL,
--    street VARCHAR(50) DEFAULT NULL,
--    location POINT DEFAULT NULL,
--    enabled BOOLEAN DEFAULT FALSE,
--    non_locked BOOLEAN DEFAULT TRUE,
--    using_mfa BOOLEAN DEFAULT FALSE,
--    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
--    CONSTRAINT UQ_Users_Email UNIQUE (email)
--);
--
--DROP TABLE IF EXISTS Cinemas;
--
--CREATE TABLE Cinemas(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    name VARCHAR(50) NOT NULL,
--    email VARCHAR(100) NOT NULL,
--    phone VARCHAR(20) NULL,
--    location POINT DEFAULT NULL,
--    country VARCHAR(50) DEFAULT NULL,
--    state VARCHAR(50) DEFAULT NULL,
--    city VARCHAR(50) DEFAULT NULL,
--    postal_code VARCHAR(20) DEFAULT NULL,
--    street VARCHAR(50) DEFAULT NULL,
--    profile_image VARCHAR(255) DEFAULT NULL,
--    bio VARCHAR(255) DEFAULT NULL,
--    enabled BOOLEAN DEFAULT FALSE,
--    non_locked BOOLEAN DEFAULT TRUE,
--    using_mfa BOOLEAN DEFAULT FALSE,
--    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
--    CONSTRAINT UQ_Cinemas_Email_Phone UNIQUE (email, phone)
--);
--
--DROP TABLE IF EXISTS Staff;
--
--CREATE TABLE Staff(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    first_name VARCHAR(50) NOT NULL,
--    last_name VARCHAR(50) NOT NULL,
--    email VARCHAR(100) NOT NULL,
--    phone VARCHAR(20) DEFAULT NULL,
--    password VARCHAR(255) NOT NULL,
--    cinema_id BIGINT UNSIGNED NOT NULL,
--    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
--    FOREIGN KEY (cinema_id) REFERENCES Cinemas (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_Cinemas_Email_Phone UNIQUE (email, phone)
--);
--
--DROP TABLE IF EXISTS Roles;
--
--CREATE TABLE Roles(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    name VARCHAR(50) NOT NULL,
--    permission VARCHAR(255) NOT NULL,
--    CONSTRAINT UQ_Roles_Name UNIQUE (name)
--);
--
--DROP TABLE IF EXISTS StaffRoles;
--
--CREATE TABLE StaffRoles(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
--    staff_id BIGINT UNSIGNED NOT NULL,
--    role_id BIGINT UNSIGNED NOT NULL,
--    FOREIGN KEY (staff_id) REFERENCES Staff (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    FOREIGN KEY (role_id) REFERENCES Roles (id) ON DELETE RESTRICT ON UPDATE CASCADE,
--    CONSTRAINT UQ_StaffRoles_Staff_Id UNIQUE (staff_id)
--);
--
--DROP TABLE IF EXISTS Events;
--
--CREATE TABLE Events(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    type VARCHAR(50) NOT NULL CHECK(type IN ('LOGIN_ATTEMPT', 'LOGIN_ATTEMPT_FAILURE', 'LOGIN_ATTEMPT_SUCCESS', 'PROFILE_UPDATE', 'PROFILE_PICTURE_UPDATE', 'ROLE_UPDATE', 'ACCOUNT_SETTINGS_UPDATE', 'PASSWORD_UPDATE', 'MFA_UPDATE')),
--    description VARCHAR(255) NOT NULL,
--    CONSTRAINT UQ_Events_Type UNIQUE (type)
--);
--
--DROP TABLE IF EXISTS UserEvents;
--
--CREATE TABLE UserEvents(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id BIGINT UNSIGNED NOT NULL,
--    event_id BIGINT UNSIGNED NOT NULL,
--    device VARCHAR(100) DEFAULT NULL,
--    ip_address VARCHAR(100) DEFAULT NULL,
--    created_at VARCHAR(100) DEFAULT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE
--);
--
--DROP TABLE IF EXISTS StaffEvents;
--
--CREATE TABLE StaffEvents(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id BIGINT UNSIGNED NOT NULL,
--    event_id BIGINT UNSIGNED NOT NULL,
--    device VARCHAR(100) DEFAULT NULL,
--    ip_address VARCHAR(100) DEFAULT NULL,
--    created_at VARCHAR(100) DEFAULT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE
--);
--
--
--DROP TABLE IF EXISTS StaffEvents;
--
--CREATE TABLE StaffEvents(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id BIGINT UNSIGNED NOT NULL,
--    event_id BIGINT UNSIGNED NOT NULL,
--    device VARCHAR(100) DEFAULT NULL,
--    ip_address VARCHAR(100) DEFAULT NULL,
--    created_at VARCHAR(100) DEFAULT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE
--);
--
--
--DROP TABLE IF EXISTS StaffAccountVerifications;
--
--CREATE TABLE StaffAccountVerifications(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    staff_id BIGINT UNSIGNED NOT NULL,
--    url VARCHAR(255) NOT NULL,
----    date DATETIME NOT NULL,
--    FOREIGN KEY (staff_id) REFERENCES Staff (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_StaffAccountVerifications_Staff_Id UNIQUE (staff_id),
--    CONSTRAINT UQ_StaffAccountVerifications_Url UNIQUE (url)
--);
--
--
--
--DROP TABLE IF EXISTS UserAccountVerifications;
--
--CREATE TABLE UserAccountVerifications(
--    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id BIGINT UNSIGNED NOT NULL,
--    url VARCHAR(255) NOT NULL,
--    --    date DATETIME NOT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_UserAccountVerifications_User_Id UNIQUE (user_id),
--    CONSTRAINT UQ_UserAccountVerifications_Url UNIQUE (url)
--);
--
--DROP TABLE IF EXISTS UserResetPasswordVerifications;
--
--CREATE TABLE UserResetPasswordVerifications(
--    id              BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id         BIGINT UNSIGNED NOT NULL,
--    url             VARCHAR(255) NOT NULL,
--    expiration_date DATETIME NOT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_UserResetPasswordVerifications_User_Id UNIQUE (user_id),
--    CONSTRAINT UQ_UserResetPasswordVerifications_Url UNIQUE (url)
--);
--
--DROP TABLE IF EXISTS UserTwoFactorVerifications;
--
--CREATE TABLE UserTwoFactorVerifications(
--    id              BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    user_id         BIGINT UNSIGNED NOT NULL,
--    code             VARCHAR(10) NOT NULL,
--    expiration_date DATETIME NOT NULL,
--    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_UserTwoFactorVerifications_User_Id UNIQUE (user_id),
--    CONSTRAINT UQ_UserTwoFactorVerifications_Code UNIQUE (code)
--);
--
--DROP TABLE IF EXISTS StaffResetPasswordVerifications;
--
--CREATE TABLE StaffResetPasswordVerifications(
--    id              BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    staff_id         BIGINT UNSIGNED NOT NULL,
--    url             VARCHAR(255) NOT NULL,
--    expiration_date DATETIME NOT NULL,
--    FOREIGN KEY (staff_id) REFERENCES Staff (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_StaffResetPasswordVerifications_Staff_Id UNIQUE (staff_id),
--    CONSTRAINT UQ_StaffResetPasswordVerifications_Url UNIQUE (url)
--);
--
--DROP TABLE IF EXISTS StaffTwoFactorVerifications;
--
--CREATE TABLE StaffTwoFactorVerifications(
--    id              BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
--    staff_id         BIGINT UNSIGNED NOT NULL,
--    code             VARCHAR(10) NOT NULL,
--    expiration_date DATETIME NOT NULL,
--    FOREIGN KEY (staff_id) REFERENCES Staff (id) ON DELETE CASCADE ON UPDATE CASCADE,
--    CONSTRAINT UQ_StaffTwoFactorVerifications_Staff_Id UNIQUE (staff_id),
--    CONSTRAINT UQ_StaffTwoFactorVerifications_Code UNIQUE (code)
--);
